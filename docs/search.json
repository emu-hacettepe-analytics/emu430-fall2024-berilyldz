[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Our Course Project",
    "section": "",
    "text": "I’m honored to be a member of the [group name] project team.\nBelow, you’ll find a brief summary of our project. To access a detailed project description, please go to https://[your-project-url].\nSummary\n[provide a biref summary of your project]\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello! My name is Beril Yıldız.\nThis is my personal webpage.\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Assignment 2"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "B.S., Industrial Engineering, Hacettepe University, Turkey, 2023 - ongoing."
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "About Me",
    "section": "Employements",
    "text": "Employements\n\nFirm xxx, position xx, year xxx\nFirm yyy, position yyy, year yyy"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nHUGO BOSS Tekstil Sanayi Limited Şirketi (HUGO BOSS Textile Industry Limited Company), Supply Chain - Logistics and Planning Intern, 2024\nVestel Elektronik Sanayi ve Ticaret AŞ (Vestel Electronics Industry and Trade Inc.), Test Engineer Intern, 2023\nDVLX R&D, PCB Design Engineer Intern, 2022"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "My first assignment has two parts.",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the Fall 2024 EMU430 Data Analytics course.\nPlease use left menu to navigate through my assignments.\nThe most recent update to this page was made on October 27, 2024.\n\n\n\n Back to top",
    "crumbs": [
      "My Assignments"
    ]
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html#programming",
    "href": "about.html#programming",
    "title": "About Me",
    "section": "Programming",
    "text": "Programming\nR, Quarto, Git, Python, SAP MM & PP Modules, MySQL, MS Office"
  },
  {
    "objectID": "about.html#languages",
    "href": "about.html#languages",
    "title": "About Me",
    "section": "Languages",
    "text": "Languages\nTurkish (Native), English (Proficient), German (Intermediate), Spanish (Basic)"
  },
  {
    "objectID": "about.html#certifications",
    "href": "about.html#certifications",
    "title": "About Me",
    "section": "Certifications",
    "text": "Certifications\nEU Youthpass Certificate, Yetkin Gençler 21st-Century Competencies Program Certificate"
  },
  {
    "objectID": "assignments/assignment-1.html#b",
    "href": "assignments/assignment-1.html#b",
    "title": "Assignment 1",
    "section": "",
    "text": "Import the “polls_us_election_2016” data set from the dslabs package.\n\n\nlibrary(dslabs)\ndata(\"polls_us_election_2016\")\n\n\nDisplay the first 10 rows of the data set on your web page.\n\n\nfirst_ten_row &lt;- head(polls_us_election_2016, 10)\nfirst_ten_row\n\n        state  startdate    enddate\n1        U.S. 2016-11-03 2016-11-06\n2        U.S. 2016-11-01 2016-11-07\n3        U.S. 2016-11-02 2016-11-06\n4        U.S. 2016-11-04 2016-11-07\n5        U.S. 2016-11-03 2016-11-06\n6        U.S. 2016-11-03 2016-11-06\n7        U.S. 2016-11-02 2016-11-06\n8        U.S. 2016-11-03 2016-11-05\n9  New Mexico 2016-11-06 2016-11-06\n10       U.S. 2016-11-04 2016-11-07\n                                                     pollster grade samplesize\n1                                    ABC News/Washington Post    A+       2220\n2                                     Google Consumer Surveys     B      26574\n3                                                       Ipsos    A-       2195\n4                                                      YouGov     B       3677\n5                                            Gravis Marketing    B-      16639\n6  Fox News/Anderson Robbins Research/Shaw & Company Research     A       1295\n7                                     CBS News/New York Times    A-       1426\n8                                NBC News/Wall Street Journal    A-       1282\n9                                                    Zia Poll  &lt;NA&gt;       8439\n10                                                   IBD/TIPP    A-       1107\n   population rawpoll_clinton rawpoll_trump rawpoll_johnson rawpoll_mcmullin\n1          lv           47.00         43.00            4.00               NA\n2          lv           38.03         35.69            5.46               NA\n3          lv           42.00         39.00            6.00               NA\n4          lv           45.00         41.00            5.00               NA\n5          rv           47.00         43.00            3.00               NA\n6          lv           48.00         44.00            3.00               NA\n7          lv           45.00         41.00            5.00               NA\n8          lv           44.00         40.00            6.00               NA\n9          lv           46.00         44.00            6.00               NA\n10         lv           41.20         42.70            7.10               NA\n   adjpoll_clinton adjpoll_trump adjpoll_johnson adjpoll_mcmullin\n1         45.20163      41.72430        4.626221               NA\n2         43.34557      41.21439        5.175792               NA\n3         42.02638      38.81620        6.844734               NA\n4         45.65676      40.92004        6.069454               NA\n5         46.84089      42.33184        3.726098               NA\n6         49.02208      43.95631        3.057876               NA\n7         45.11649      40.92722        4.341786               NA\n8         43.58576      40.77325        5.365788               NA\n9         44.82594      41.59978        7.870127               NA\n10        42.92745      42.23545        6.316175               NA\n\n\n\nCalculate and display the total number of NA values in the entire data set.\n\n\nnumber_of_nas &lt;- sum(is.na(polls_us_election_2016))\nnumber_of_nas\n\n[1] 11604\n\n\n\nReplace all NA values in the “polls_us_election_2016” data set as follows: For numeric xs, replace NA values with your birth year. For character or factor xs, replace NA values with your first name. Store the modified data set as a new object.\n\n\n#Creata a copy for the modified dataset\npolls_us_election_2016_modified &lt;- polls_us_election_2016\n\n#Define replacements\nbirth_year &lt;- 2002\nfirst_name &lt;- \"Beril\"\n\n# Define the replacement function\nreplace_na &lt;- function(x) {\n  if (is.numeric(x)) {\n    # Replace NAs in numeric xs with birth year\n    x[is.na(x)] &lt;- birth_year\n  } else if (is.factor(x)) {\n    # Convert factor to character if necessary, replace NAs with first name\n    x &lt;- as.character(x)\n    x[is.na(x)] &lt;- first_name\n    # Optionally, convert back to factor\n    x &lt;- as.factor(x)\n  } else if (is.character(x)) {\n    # If it's already a character, just replace NAs\n    x[is.na(x)] &lt;- first_name\n  }\n  return(x)\n}\n\n# Apply the function to each x using lapply\npolls_us_election_2016_modified &lt;- as.data.frame(\n  lapply(polls_us_election_2016, replace_na)\n)\n\n\n#Creata a copy for the modified dataset\npolls_us_election_2016_modified &lt;- polls_us_election_2016\n\nThis line creates a copy of the dataset, so the original dataset will not be affected.\n\n#Define replacements\nbirth_year &lt;- 2002\nfirst_name &lt;- \"Beril\"\n\nThese lines define the replacement values. If a value is missing in a numeric column, it will be replaced with 2002. If a value is missing in a character column, it will be replaced with “Beril”.\n\n# Define the replacement function\nreplace_na &lt;- function(x) {\n  if (is.numeric(x)) {\n    # Replace NAs in numeric xs with birth year\n    x[is.na(x)] &lt;- birth_year\n  } else if (is.factor(x)) {\n    # Convert factor to character if necessary, replace NAs with first name\n    x &lt;- as.character(x)\n    x[is.na(x)] &lt;- first_name\n    # Optionally, convert back to factor\n    x &lt;- as.factor(x)\n  } else if (is.character(x)) {\n    # If it's already a character column, just replace NAs\n    x[is.na(x)] &lt;- first_name\n  }\n  return(x)\n}\n\nThis function replaces the NA values with the appropriate variables. The if condition checks if the column is numeric. If it is numeric, the function evaluates and returns a logical value. If the value is TRUE (which corresponds to NA), it replaces the NA with the birth_year.\nThe else if part checks if the column is a factor. If it is, the code inside the block is executed. Typically, factors and characters need to be treated in a similar way when manipulating categorical data. The first step is to convert all factor values to characters using the as.character function. Then, the NA values are replaced with first_name as done previously. After replacing the NA values, we can convert the column back to a factor using as.factor() if needed.\nIf the column is already of type character, it is handled similarly to a factor. The NA values are replaced with first_name.\n\n# Apply the function to each x using lapply\npolls_us_election_2016_modified &lt;- as.data.frame(\n  lapply(polls_us_election_2016, replace_na)\n)\n\nThe lapply() function is used to apply the replacement function to each column of the polls_us_election_2016_modified data frame. Afterward, it is converted back into a data frame using the as.data.frame() function.",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#a-summary-of-a-chosen-video",
    "href": "assignments/assignment-1.html#a-summary-of-a-chosen-video",
    "title": "Assignment 1",
    "section": "(a) Summary of a chosen video",
    "text": "(a) Summary of a chosen video\nChoose a video from one of the following sources and provide a brief summary.",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#b-completing-the-following-tasks",
    "href": "assignments/assignment-1.html#b-completing-the-following-tasks",
    "title": "Assignment 1",
    "section": "(b) Completing the following tasks",
    "text": "(b) Completing the following tasks\nImport the “polls_us_election_2016” data set from the dslabs package.\n\nlibrary(dslabs)\ndata(\"polls_us_election_2016\")\n\nDisplay the first 10 rows of the data set on your web page.\n\nfirst_ten_row &lt;- head(polls_us_election_2016, 10)\nfirst_ten_row\n\n        state  startdate    enddate\n1        U.S. 2016-11-03 2016-11-06\n2        U.S. 2016-11-01 2016-11-07\n3        U.S. 2016-11-02 2016-11-06\n4        U.S. 2016-11-04 2016-11-07\n5        U.S. 2016-11-03 2016-11-06\n6        U.S. 2016-11-03 2016-11-06\n7        U.S. 2016-11-02 2016-11-06\n8        U.S. 2016-11-03 2016-11-05\n9  New Mexico 2016-11-06 2016-11-06\n10       U.S. 2016-11-04 2016-11-07\n                                                     pollster grade samplesize\n1                                    ABC News/Washington Post    A+       2220\n2                                     Google Consumer Surveys     B      26574\n3                                                       Ipsos    A-       2195\n4                                                      YouGov     B       3677\n5                                            Gravis Marketing    B-      16639\n6  Fox News/Anderson Robbins Research/Shaw & Company Research     A       1295\n7                                     CBS News/New York Times    A-       1426\n8                                NBC News/Wall Street Journal    A-       1282\n9                                                    Zia Poll  &lt;NA&gt;       8439\n10                                                   IBD/TIPP    A-       1107\n   population rawpoll_clinton rawpoll_trump rawpoll_johnson rawpoll_mcmullin\n1          lv           47.00         43.00            4.00               NA\n2          lv           38.03         35.69            5.46               NA\n3          lv           42.00         39.00            6.00               NA\n4          lv           45.00         41.00            5.00               NA\n5          rv           47.00         43.00            3.00               NA\n6          lv           48.00         44.00            3.00               NA\n7          lv           45.00         41.00            5.00               NA\n8          lv           44.00         40.00            6.00               NA\n9          lv           46.00         44.00            6.00               NA\n10         lv           41.20         42.70            7.10               NA\n   adjpoll_clinton adjpoll_trump adjpoll_johnson adjpoll_mcmullin\n1         45.20163      41.72430        4.626221               NA\n2         43.34557      41.21439        5.175792               NA\n3         42.02638      38.81620        6.844734               NA\n4         45.65676      40.92004        6.069454               NA\n5         46.84089      42.33184        3.726098               NA\n6         49.02208      43.95631        3.057876               NA\n7         45.11649      40.92722        4.341786               NA\n8         43.58576      40.77325        5.365788               NA\n9         44.82594      41.59978        7.870127               NA\n10        42.92745      42.23545        6.316175               NA\n\n\nCalculate and display the total number of NA values in the entire data set.\n\nnumber_of_nas &lt;- sum(is.na(polls_us_election_2016))\nnumber_of_nas\n\n[1] 11604\n\n\nReplace all NA values in the “polls_us_election_2016” data set as follows: For numeric xs, replace NA values with your birth year. For character or factor xs, replace NA values with your first name. Store the modified data set as a new object.\n\n#Creata a copy for the modified dataset\npolls_us_election_2016_modified &lt;- polls_us_election_2016\n\n#Define replacements\nbirth_year &lt;- 2002\nfirst_name &lt;- \"Beril\"\n\n# Define the replacement function\nreplace_na &lt;- function(x) {\n  if (is.numeric(x)) {\n    # Replace NAs in numeric xs with birth year\n    x[is.na(x)] &lt;- birth_year\n  } else if (is.factor(x)) {\n    # Convert factor to character if necessary, replace NAs with first name\n    x &lt;- as.character(x)\n    x[is.na(x)] &lt;- first_name\n    # Optionally, convert back to factor\n    x &lt;- as.factor(x)\n  } else if (is.character(x)) {\n    # If it's already a character, just replace NAs\n    x[is.na(x)] &lt;- first_name\n  }\n  return(x)\n}\n\n# Apply the function to each x using lapply\npolls_us_election_2016_modified &lt;- as.data.frame(\n  lapply(polls_us_election_2016, replace_na)\n)\n\n\n#Creata a copy for the modified dataset\npolls_us_election_2016_modified &lt;- polls_us_election_2016\n\nThis line creates a copy of the dataset, so the original dataset will not be affected.\n\n#Define replacements\nbirth_year &lt;- 2002\nfirst_name &lt;- \"Beril\"\n\nThese lines define the replacement values. If a value is missing in a numeric column, it will be replaced with 2002. If a value is missing in a character column, it will be replaced with “Beril”.\n\n# Define the replacement function\nreplace_na &lt;- function(x) {\n  if (is.numeric(x)) {\n    # Replace NAs in numeric xs with birth year\n    x[is.na(x)] &lt;- birth_year\n  } else if (is.factor(x)) {\n    # Convert factor to character if necessary, replace NAs with first name\n    x &lt;- as.character(x)\n    x[is.na(x)] &lt;- first_name\n    # Optionally, convert back to factor\n    x &lt;- as.factor(x)\n  } else if (is.character(x)) {\n    # If it's already a character column, just replace NAs\n    x[is.na(x)] &lt;- first_name\n  }\n  return(x)\n}\n\nThis function replaces the NA values with the appropriate variables. The if condition checks if the column is numeric. If it is numeric, the function evaluates and returns a logical value. If the value is TRUE (which corresponds to NA), it replaces the NA with the birth_year.\nThe else if part checks if the column is a factor. If it is, the code inside the block is executed. The first step is to convert all factor values to characters using the as.character function. Then, the NA values are replaced with first_name as done previously. After replacing the NA values, we can convert the column back to a factor using as.factor() if needed.\nIf the column is already of type character, it is handled similarly to a factor. The NA values are replaced with first_name.\n\n# Apply the function to each x using lapply\npolls_us_election_2016_modified &lt;- as.data.frame(\n  lapply(polls_us_election_2016, replace_na)\n)\n\nThe lapply() function is used to apply the replacement function to each column of the polls_us_election_2016_modified data frame. Afterward, it is converted back into a data frame using the as.data.frame() function.\nPrint the first 10 rows of the new data frame and the total number of NAs remaining in the new data frame.\n\nhead(polls_us_election_2016_modified, 10)\n\n        state  startdate    enddate\n1        U.S. 2016-11-03 2016-11-06\n2        U.S. 2016-11-01 2016-11-07\n3        U.S. 2016-11-02 2016-11-06\n4        U.S. 2016-11-04 2016-11-07\n5        U.S. 2016-11-03 2016-11-06\n6        U.S. 2016-11-03 2016-11-06\n7        U.S. 2016-11-02 2016-11-06\n8        U.S. 2016-11-03 2016-11-05\n9  New Mexico 2016-11-06 2016-11-06\n10       U.S. 2016-11-04 2016-11-07\n                                                     pollster grade samplesize\n1                                    ABC News/Washington Post    A+       2220\n2                                     Google Consumer Surveys     B      26574\n3                                                       Ipsos    A-       2195\n4                                                      YouGov     B       3677\n5                                            Gravis Marketing    B-      16639\n6  Fox News/Anderson Robbins Research/Shaw & Company Research     A       1295\n7                                     CBS News/New York Times    A-       1426\n8                                NBC News/Wall Street Journal    A-       1282\n9                                                    Zia Poll Beril       8439\n10                                                   IBD/TIPP    A-       1107\n   population rawpoll_clinton rawpoll_trump rawpoll_johnson rawpoll_mcmullin\n1          lv           47.00         43.00            4.00             2002\n2          lv           38.03         35.69            5.46             2002\n3          lv           42.00         39.00            6.00             2002\n4          lv           45.00         41.00            5.00             2002\n5          rv           47.00         43.00            3.00             2002\n6          lv           48.00         44.00            3.00             2002\n7          lv           45.00         41.00            5.00             2002\n8          lv           44.00         40.00            6.00             2002\n9          lv           46.00         44.00            6.00             2002\n10         lv           41.20         42.70            7.10             2002\n   adjpoll_clinton adjpoll_trump adjpoll_johnson adjpoll_mcmullin\n1         45.20163      41.72430        4.626221             2002\n2         43.34557      41.21439        5.175792             2002\n3         42.02638      38.81620        6.844734             2002\n4         45.65676      40.92004        6.069454             2002\n5         46.84089      42.33184        3.726098             2002\n6         49.02208      43.95631        3.057876             2002\n7         45.11649      40.92722        4.341786             2002\n8         43.58576      40.77325        5.365788             2002\n9         44.82594      41.59978        7.870127             2002\n10        42.92745      42.23545        6.316175             2002",
    "crumbs": [
      "Assignment 1"
    ]
  }
]